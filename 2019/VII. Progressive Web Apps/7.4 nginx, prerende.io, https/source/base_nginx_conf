
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html/uds-production;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name uds-moscow.ru;
	return 301 https://$server_name$request_uri;

	location @prerender {
         proxy_set_header X-Prerender-Token SqQuTRI4qJQwxBJ6bYNT;

        set $prerender 0;
        if ($http_user_agent ~* "googlebot|bingbot|yandex|yandexbot|YandexBot|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
             set $prerender 1;
        }
        if ($args ~ "escaped_fragment") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {
            # setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "service.prerender.io";
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://$prerender;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }

    }


	location / {
		try_files $uri @prerender;
	}
}

server {

    # добавляем протокол http2

    listen 443 ssl default_server;

    server_name uds-moscow.ru;
    root /var/www/html/uds-production;

    access_log off;

    # access_log /var/log/nginx/name.ru.access.log;

    error_log /var/log/nginx/name.ru.error.log;

    ssl on;

    # Включаем OCSP-stapling. Что это такое и зачем нужно, вы можете найти у нас в FAQ.

    ssl_stapling on;

    ssl_stapling_verify on;

    # наши сертификаты

    ssl_certificate /etc/ssl/bundle.crt;

	ssl_certificate_key /etc/ssl/privatekey.key;

    # настраиваем сессию

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

    # проксирование данных

    location /send_email.php {
		proxy_pass http://130.193.55.57:3000/send_email;
    }

    location /api/ {
    	proxy_pass http://130.193.55.57:3000/api/;
    }

    location @prerender {
             proxy_set_header X-Prerender-Token SqQuTRI4qJQwxBJ6bYNT;
    
            set $prerender 0;
            if ($http_user_agent ~* "googlebot|bingbot|yandex|yandexbot|YandexBot|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
                 set $prerender 1;
            }
            if ($args ~ "escaped_fragment") {
                set $prerender 1;
            }
            if ($http_user_agent ~ "Prerender") {
                set $prerender 0;
            }
            if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
                set $prerender 0;
            }
    
            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 8.8.8.8;
    
            if ($prerender = 1) {
                # setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
                set $prerender "service.prerender.io";
                rewrite .* /$scheme://$host$request_uri? break;
                proxy_pass http://$prerender;
            }
            if ($prerender = 0) {
                rewrite .* /index.html break;
            }
    
    }

    

    location / {

        # параметры проксирования

        proxy_send_timeout 600;

        proxy_read_timeout 600;

        proxy_buffer_size   128k;

        proxy_buffers   4 256k;

        proxy_busy_buffers_size   256k;

        proxy_set_header Host      $host;

        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header HTTPS YES;

        try_files $uri @prerender;

    }
}